{"version":3,"sources":["components/Header.js","components/Footer.js","pages/Login.js","pages/Register.js","pages/Results.js","pages/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","user","to","Footer","id","Login","useState","userName","setUserName","password","setPassword","error","setError","navigate","useNavigate","useEffect","setUser","setIsLoggedIn","handleSubmit","e","a","preventDefault","fetch","method","headers","then","response","console","log","status","json","catch","data","onSubmit","type","name","value","onChange","target","className","Register","personId","setPersonId","passConfirm","setPassConfirm","User","this","body","JSON","stringify","window","alert","Results","results","shortResults","setShortResults","length","map","result","class","rentalDescription","rentalStatus","rentalType","rentalScore","rentalPrice","rentalListDate","Search","search","setSearch","setResults","searchBy","setSearchBy","handleSearch","ok","message","statusText","toString","isLoggedIn","placeholder","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a71100b8.chunk.js","sourcesContent":["// a simple header for the app\n// this needs some work, specific the login/ logout\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  //testing code\n//   useEffect(() => {\n//     console.log(props.user);\n//   }, [props.user]);\n\n  return (\n    <header>\n      <div>Search OurBnB</div>\n      <nav>\n        {/* Link for login becomes logout if user is defined */}\n        {props.user===null ? <Link to=\"/\" >Login</Link> : <Link to=\"/\" >Logout</Link>}\n        <Link to=\"/register\">Register</Link>\n        \n        {/* <Link to=\"/search\">Search</Link> this page is only accessible if logged in  */}\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","// a simple footer for the app\n\nimport React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer id=\"footer\">\n            <hr /><hr />\n            <p>Coded by: Ashley Fillmore, Michael O'Reilly, and Stephen Squire</p>\n            <p> &copy; Copyright 2022, All Rights Reserved </p>\n            <p>Built using create-react-app</p>\n\n        </footer>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n//will need many more imports including useEffect and useState\n\nconst Login = (props) => {\n  // a useState to store the user object on successful login will be required\n  // ^^ will also need to be passed forward to the search page\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  //a use effect to ensure the user object is reset to null on returning to the login page\n  useEffect(() => {\n    props.setUser(null);\n    props.setIsLoggedIn(false);\n  }, []);\n\n  // a function to handle the login form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    // testing comments\n    //console.log(userName);\n    // console.log(password);\n    if (userName === \"\" || password === \"\") {\n      setError(\"Please enter a username and password\");\n      return\n    }\n    // code to send value to server to check if user exists\n\n    await fetch(`http://finalspringboot-env.eba-psqhnabc.us-east-1.elasticbeanstalk.com/users/userName?userName=${userName}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"mode\": \"cors\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    })\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          // console.log(response.body);\n          // console.log(response.json())\n          return response.json();\n        } else {\n          setError(\"User does not exist\");\n          return\n        }\n      })\n      .catch((error) => {\n        setError(\"User does not exist\");\n        return;\n      })\n      .then((data) => {\n        console.log(data);\n        if (data[0].password === password) {\n          //console.log(\"password is correct\");\n          // if user exists and passwords match, set user object to the user object\n          props.setUser(userName);\n          props.setIsLoggedIn(true);\n          navigate(\"/search\");\n        } else {\n          setError(\"Password is incorrect\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(\"User does not exist and exit on error\");\n        return;\n      });\n\n    // early testing code for ensuring React was working\n    // props.setUser(userName);\n    // props.setIsLoggedIn(true);\n    // navigate(\"/search\");\n    // setUserName(\"\");\n    // setPassword(\"\");\n  };\n\n  return (\n    <div>\n      <h1 id=\"login\">Login</h1>\n      <form id=\"registerForm\" onSubmit={handleSubmit}>\n        <label id=\"username\">Username:</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <br />\n        <label id=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <br />\n        <input id=\"submit\" type=\"submit\" value=\"Login\" />\n      </form>\n      {error ? <p className=\"error\">{error}</p> : null}\n      <div>\n        <p>\n          Don't have an account? <Link to=\"/register\"> Register here.</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n// bcrypt is unhappy about react, there are work arounds... to be continued time allowing\n//import bcrypt from \"bcryptjs\";\n\nconst Register = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [personId, setPersonId] = useState();\n  const [passConfirm, setPassConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  class User {\n    constructor(userName, password, personId) {\n      this.userName = userName;\n      this.password = password;\n      this.personId = personId\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    if (userName === \"\" || password === \"\" || passConfirm === \"\") {\n      setError(\"Please enter a username and password\");\n    } else if (password !== passConfirm) {\n      setError(\"Passwords do not match\");\n    } else {\n      setError(null);\n      let user = new User(userName, password, personId);\n      // bcrypt.hash(user.password, 10, (err, hash) => {})\n      // ^^ this is where i would encode the password, unless server side encryption becomes my chosen solution\n      await fetch(\"http://finalspringboot-env.eba-psqhnabc.us-east-1.elasticbeanstalk.com/users/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"mode\": \"cors\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        body: JSON.stringify(user),\n      }).catch((error) => {\n        window.alert(error);\n        return;\n      });\n      window.alert(\"User created, returning to login\");\n      setUserName(\"\");\n      setPassword(\"\");\n      setPassConfirm(\"\");\n      setPersonId(1);\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <div>\n      <h1 id=\"register\">Register</h1>\n      <form id=\"registerForm\" onSubmit={handleSubmit}>\n        <label id=\"registerinfo\">Username:</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <br />\n        <label id=\"registerinfo\">Person Id</label>\n        <input\n          type=\"personId\"\n          name=\"personId\"\n          value={personId}\n          onChange={(e) => setPersonId(e.target.value)}\n        />\n        <br />\n        <label id=\"registerinfo\">Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <br />\n        <label id=\"registerinfo\">Confirm Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={passConfirm}\n          onChange={(e) => setPassConfirm(e.target.value)}\n        />\n        <br />\n        <input id=\"submit\" type=\"submit\" value=\"Register\" />\n      </form>\n      {error ? <p className=\"error\">{error}</p> : null}\n      <div>\n        <p>\n          Already have an account? <Link to=\"/\"> Login here.</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// handles the search results and processes the data for display, limits number of visible result\n// results are displayed very rudimentarily, could increase amount of data displayed and incorporate paging etc...\nconst Results = (props) => {\n  const results = props.results;\n  const [shortResults, setShortResults] = useState([]);\n\n  // we aren't using mongo\n  // useEffect(() => {\n  //   if (props.database === \"mongo\") {\n  //     console.log(results[0]);\n  //     let temp = [];\n  //     let number;\n  //     results.length < 20 ? (number = results.length) : (number = 20);\n  //     // ^^ if the results are less than 20, display all results otherwise display 20\n  //     for (let i = 0; i < number; i++) {\n  //       temp.push(results[i]);\n  //     }\n  //     setShortResults(temp);\n  //   } else {\n  //     console.log(results);\n  //     setShortResults(results);\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    setShortResults(results);\n\n  }, []);\n\n  if (results.length > 0) {\n\n    return (\n      <div>\n        <h1 id=\"results\">Results</h1>\n        <hr />\n\n        {shortResults.map((result) => (\n\n          <div>\n            <hr />\n            <h2 class=\"rentalTitle\">{result.rentalDescription}</h2>\n            <hr />\n            <h3 id=\"rentalinfo\">Availability: {result.rentalStatus}</h3>\n            <h3 id=\"rentalinfo\">Rental type: {result.rentalType}</h3>\n            <h3 id=\"rentalinfo\">Rating: {result.rentalScore} Stars</h3>\n            <h3 id=\"rentalinfo\">Nightly Rate: ${result.rentalPrice}.00</h3>\n            <h3 id=\"rentalinfo\">Renting Since: {result.rentalListDate}</h3>\n\n\n          </div>\n\n        ))}\n\n      </div>\n    )\n  }\n\n\n\n  // let i = 0;\n  // if (props.database === \"postgres\") {\n  //   return (\n  //     <div>\n  //       <h1> Postgres Results</h1>\n  //       {shortResults.map((result) => {\n  //         console.log(result);\n  //         return (\n  //           <div>\n  //             <h2>{result.business_name}</h2>\n  //             <p>\n  //               {`${result.city}`}\n  //               <br />\n  //               {result.address}\n  //               <br />\n  //               {result.categories}\n  //               <br />\n  //               {/* found an error this morning, fixed review_count to be displayed instead of .stars twice :) */}\n  //               {`Rated ${result.stars} stars across ${result.review_count} reviews.`}\n  //               <br />\n  //             </p>\n  //           </div>\n  //         );\n  //       })}\n  //     </div>\n  //   );\n  // } else if (props.database === \"mongo\") {\n  //   return (\n  //     <div>\n  //       <h1>Results</h1>\n\n  //       {shortResults.map((result) => {\n  //         return (\n  //           <div>\n  //             <hr />\n  //             <h3>{result.name}</h3>\n  //             <div>\n  //               {`${result.city}, ${result.state}`} <br />\n  //               {result.address}\n  //               <br />\n  //               {result.categories} <br />\n  //               {`Rating: ${result.stars}/5 based on ${result.review_count} reviews.`}{\" \"}\n  //               <br />\n  //               <hr />\n  //             </div>\n  //           </div>\n  //         );\n  //       })}\n  //       <br />\n  //       {results\n  //         ? `There are ${results.length} results, up to the first 20 are shown`\n  //         : null}\n  //     </div>\n  //   );\n  // } else {\n  //   return (\n  //     <div>\n  //       <h1>{`Search History for ${props.user}`}</h1>\n  //       {results.map((result) => {\n  //         return (\n  //           <div>\n  //             <p className=\"searchHistory\">{`Searched \"${result.search}\" on the ${result.database} database on ${result.time}`}</p>\n  //           </div>\n  //         );\n  //       })}\n  //     </div>\n  //   );\n  // }\n};\n\nexport default Results;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Results from \"./Results\";\nimport { useNavigate } from \"react-router\";\nimport { Logger } from \"../logger/logger\";\n\nconst Search = (props) => {\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [searchBy, setSearchBy] = useState(\"businessName\");\n  // const [database, setDatabase] = useState(\"\");\n  // const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  // const logger = new Logger();\n\n  // may reactivate if we decide/ determine we need to keep logs\n  // const logSearch = async () => {\n  //   // setMessage(logger.create(props.user, search, database, new Date()));\n  //   console.log(message);\n  //   await fetch(\"http://localhost:5000/log\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(message),\n  //   }).catch((error) => {\n  //     window.alert(error);\n  //     return;\n  //   });\n  // };\n\n  // functions for searches\n  const handleSearch = async () => {\n    setResults(null);\n    const response = await fetch(\n      `http://finalspringboot-env.eba-psqhnabc.us-east-1.elasticbeanstalk.com/search/rental/${searchBy}/${searchBy}?${searchBy}=${search}`\n    );\n    if (!response.ok) {\n      const message = `An error occurred: ${response.statusText}`;\n      console.log(message);\n      return;\n    }\n\n    const results = await response.json();\n    console.log(results.toString());\n    setResults(results);\n    setSearch(\"\");\n    navigate(\"/search\");\n  };\n\n  // only one database so only need to handle search\n  // const handleSearchPostgres = async () => {\n  //   setResults(null);\n  //   const response = await fetch(\n  //     `http://localhost:5000/search/${database}/${search}`\n  //   );\n  //   if (!response.ok) {\n  //     const message = `An error occurred: ${response.statusText}`;\n  //     console.log(message);\n  //     return;\n  //   }\n  //   const results = await response.json();\n  //   console.log(results);\n  //   setResults(results);\n  //   setSearch(\"\");\n  //   navigate(\"/search\");\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(search);\n    console.log(searchBy);\n\n    handleSearch();\n    // setMessage(logger.create(props.user, search, new Date()));\n  }\n\n  // a useEffect to ensure a use is logged in, if not redirect to login page\n  useEffect(() => {\n    if (!props.isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  // a use effect to log the search when the message is set\n  // useEffect(() => {\n  //   if (message !== \"\") {\n  //     logSearch();\n  //   }\n  // }, [message]);\n\n  // dependant on the logs, therefore deactivated until/if we reactivate logging\n  // const searchHistory = async (e) => {\n  //   e.preventDefault();\n  //   // setDatabase(\"\");\n  //   const response = await fetch(`http://localhost:5000/log/${props.user}`);\n  //   if (!response.ok) {\n  //     const message = `An error occurred: ${response.statusText}`;\n  //     console.log(message);\n  //     return;\n  //   }\n  //   const results = await response.json();\n  //   console.log(results);\n  //   setResults(results);\n  // };\n\n  return (\n    <div>\n      <h1 id=\"search\">Search</h1>\n      <form id=\"searchForm\" onSubmit={handleSubmit}>\n        {/* <div>\n          <input\n            type=\"radio\"\n            name=\"database\"\n            value=\"mongo\"\n            onChange={(e) => setDatabase(e.target.value)}\n          />\n          <label>Mongo</label>\n          <input\n            type=\"radio\"\n            name=\"database\"\n            value=\"postgres\"\n            onChange={(e) => setDatabase(e.target.value)}\n          />\n          <label>PostgreSQL</label>\n        </div> */}\n        <br />\n        <div>\n          <label id=\"radiobuttons\">\n            <input\n              type=\"radio\"\n              name=\"searchBy\"\n              value=\"province\"\n              onChange={(e) => setSearchBy(e.target.value)}\n            />\n            Province\n          </label>\n          <label id=\"radiobuttons\">\n            <input\n              type=\"radio\"\n              name=\"searchBy\"\n              value=\"city\"\n              onChange={(e) => setSearchBy(e.target.value)}\n            />\n            City\n          </label>\n          <label id=\"radiobuttons\">\n            <input\n              type=\"radio\"\n              name=\"searchBy\"\n              value=\"street\"\n              onChange={(e) => setSearchBy(e.target.value)}\n            />\n            Street\n          </label>\n          <label id=\"radiobuttons\">\n            <input\n              type=\"radio\"\n              name=\"searchBy\"\n              value=\"rentalType\"\n              onChange={(e) => setSearchBy(e.target.value)}\n            />\n            Rental Type\n          </label>\n          <br />\n        </div>\n        <br />\n        <input\n          id=\"submit\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <br />\n        {/* <input type=\"submit\" value=\"Submit Search\" onSubmit={handleSubmit}/> */}\n        <button id=\"submit\" type=\"submit\">\n          Submit Search\n        </button>\n      </form>\n      <br />\n      {/* <form onSubmit={searchHistory}>\n        <button id=\"submit\" type=\"submit\">\n          Search History\n        </button>\n      </form> */}\n      {results ? (\n        <div>\n          {<Results results={results} user={props.user} />}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\n\nexport default Search;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Search from './pages/Search';\n\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n  return (\n\n    <main>\n      <Header user={user} setUser={setUser} />\n\n      <Routes>\n        <Route path=\"/\" element={<Login setUser={setUser} setIsLoggedIn={setIsLoggedIn} />} />\n        <Route path=\"/register\" element={<Register />} />\n\n        <Route path=\"/search\" element={<Search user={user} isLoggedIn={isLoggedIn} />} /> // this wont be a link but a result of a login\n      </Routes>\n      <Footer />\n    </main>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}